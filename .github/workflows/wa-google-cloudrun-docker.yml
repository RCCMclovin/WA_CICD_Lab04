name: GCP Deploy
on:
  push
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      - name: Lint
        id : lint-step
        #continue-on-error: true
        run: npm run lint
      - name: check-lint
        if: failure() && steps.lint-step.outcome == 'failure'
        run: echo "Codigo precisa ser revisto!!"
  build_docker:
    needs: lint
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          dockerfile: ./Dockerfile   # Specify the path to your Dockerfile here
          tags: ${{secrets.DOCKERHUB_USERNAME}}/webacademy:latest
  deploy:
    needs: lint
    name: Deploy on my server
    runs-on: ubuntu-latest
    steps:
      # Git checkout
      - name: Checkout
        uses: actions/checkout@v3

      # Setup cloudflared
      - name: Setup cloudflared
        run: curl -L --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb && sudo dpkg -i cloudflared.deb
      
      - name: Setup ssh
        run: mkdir -p ~/.ssh && chmod 700 ~/.ssh && touch ~/.ssh/config && chmod 600 ~/.ssh/config
      
      # Configure ssh 
      - name: Configure ssh
        run: echo "Host ssh.rcchome.com.br" >> ~/.ssh/config && echo "ProxyCommand /usr/local/bin/cloudflared access ssh --hostname %h" >> ~/.ssh/config

      - name: executing remote ssh commands using password
        run: sshpass -p ${{secrets.PASSWORD}} ssh -o StrictHostKeyChecking=accept-new ${{secrets.USERNAME}}}@${{secrets.HOST}} -p 22 'docker run -d --name webacad -p ${{secrets.LOCAL_HOST}}:8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/webacademy:latest'
